结构、数组、指针、数组指针的初始化、赋值和输出
```
#include<iostream>
using namespace std;

struct antarctica_years_end
{
	int year;
};

int main()
{
	antarctica_years_end s01, s02, s03;
	s01.year = 1998;
	antarctica_years_end* pa = &s02;
	pa->year = 1999;
	antarctica_years_end trio[3];
	trio[0].year = 2003;
	cout << trio->year << endl;
	const antarctica_years_end* arp[3]= { &s01, &s02, &s03 };
	//这里的const有什么作用？
	cout << arp[1]->year << endl;
	const antarctica_years_end** ppa = arp;
	auto ppb = arp;
	//也可以使用 const antarctica_years_end** ppb = arp;
	cout << (*ppa)->year << endl;
	cout << (*(ppb + 1))->year << endl;
	
	cout << "ppa里面存着什么内容？ " << ppa << endl;//存着arp指针数组的首位地址
	cout << "arp指针数组的首位的地址是？ " << arp << endl;
	cout << "根据ppa的地址，找到的是什么内容？ " << *ppa << endl;
	cout << "arp指针数组的首位存着什么内容？ " << *arp << endl;//存着s01的地址
	//cout << "s01里面存着什么内容？ " << s01 << endl;//s01作为一个结构体，不能直接放入输出流
	cout << "s01里面存着什么内容？ " << s01.year << endl;
	
	return 0;
}
```
通过以上代码，可知：
如何创建结构？创建结构成员？
如何根据结构创建对象？创建数组对象？如何根据结构创建指针？
创建数组指针？创建指向指针的指针？
这五位分别怎么做初始化？
如何输出对象里的内容？可以用句点运算符。
使用对象名会输出什么？
使用数组名会输出什么？
使用指针名会输出什么？要用指针名输出其中包含的对象里的内容怎么做？用箭头运算符。
使用数组指针名会输出什么？
使用指向指针的指针名会输出什么？
当数组指针指向对象的时候，如何用指针名输出首位值？如何输出非首位值？

用以下代码来回答以上问题
```
#include<iostream>

struct antarctica_years_end
{
	int year;
};

int main()
{
	//根据结构创建各种对象并初始化
	antarctica_years_end s01, s02, s03;
	antarctica_years_end arr[3];
	antarctica_years_end* ptr = arr;
	antarctica_years_end* ptn[5] = { &s01,&s02,&s03 };
	//const antarctica_years_end** pointer = ptn;//会报错
	auto pointer = ptn;

	//赋值
	//内容用句点，指针用箭头
	s01.year = 2016;
	ptn[1]->year = 2026;//给s02.year赋值
	//ptn[4]->year = 2044;//ptn[4]
	s03.year = 2036;
	ptr->year = 2004;//给arr[0].year赋值
	arr[1].year = 2005;
	(ptr + 2)->year = 2028;//给arr[2].year赋值

	//输出内容
	cout << "输出对象 " << s01.year << endl;
	cout << "输出数组 " << arr[1].year << endl;
	cout << "使用指针输出数组首位 " << ptr->year << endl;
	cout << "使用指针输出数组第二位 " << (ptr + 1)->year << endl;
	cout << "使用输出数组指针 " << (*pointer)->year << endl;

	//输出地址，本小节未详细解释结构成员的地址，搁置。有些地址对不上号。
	//每次输出，地址都在变动
	cout << "输出对象的地址 " << &s01 << endl;
	cout << "输出数组第二位的地址 " << &arr[1].year << endl;
	cout << "使用指针名输出数组首位的地址 " << ptr << endl;//是数组arr[0]的地址
	cout << "使用指针名输出数组arr第三位的地址 " << ptr + 2 << endl;
	//arr的三位之间各相差4个字节，经检验，int的长度的确是4位
	cout << "使用数组指针名输出s03的地址 " << ptn[2] << endl;
	//Q:本段代码的结构里只有一个成员，如果有多个成员，如何通过指针访问后续成员的地址呢？
	cout << "使用指向指针ptn的指针，来显示指针ptn的地址 " << pointer << endl;
	cout << "只能使用指针嵌套来显示指针的地址吗？ " << &ptn[0] << " 这是谁的地址？" << endl;
	//和pointer现实的地址不同，和s01.year、s01的地址也不同
	cout << "对指针名使用取地址符 " << &pointer << endl;

	//根据某一次的结果，画一下这些内容所存储的位置。有些地址对不上。

	return 0;
}
```
