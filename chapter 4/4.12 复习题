1 会

2 
```
#include<iostream>
#include<array>

int mian()
{
	array<char,30> actor;
	array<short,100> betsie;
	array<float,13> chuck;
	array<long double,64> dipsea;
	
	return 0;
}
```

3 会
4 会
5 会
6 会
7 会
8 会
第9题 会

第10题
```
enum response { yes=1,no=0,maybe=2 };
```

第11题
```
int main()
{
	double ted;
	double* pt;
	pt=&ted;
	cout<<"请输入一个小数 ";
	cin>>ted;
	cout<<"用指针输出ted的内容 "<<*pt<<endl;
	
	return 0;
}
```

第12题
```
void test4_12_12()
{
	float treacle[10] = { 0.1,0.2,0.3,0.4,0.5,0.6,0.7,0.8,0.9,1.0 };
	float* p_treacle=treacle;
	//*p_treacle = treacle; 错误，无法从float[10]转为float
	//p_treacle = &treacle[0];
	cout << p_treacle[0] << endl;
	cout << p_treacle[9] << endl;
}
```

13 创建一个动态的int数组，其中包含的元素数目等于用户输入的值
用new完成
```
int size;
cin >> size;
int* arr = new int [size];
```
用vector完成
```
#include<iostream>
using namespace std;
#include<vector>

int main()
{
	int n;
	cout<<"输入一个正整数 ";
	cin>>n;
	vector<int> arr_vec(n);
	
	return 0;
}
```

14 运行后才知道显示结果是这串字符的地址，找出和(int 星号)相关的代码

15给结构动态分配内存
```
#include<iostream>
using namespace std;

struct fish
{
	char type[20];
	double weight;
};

int main()
{
	fish goldfish;
	//cin.get(goldfish.type, 20);
	goldfish.weight = 3.4;
	fish* ptrfish = new fish;
	ptrfish = &goldfish;
	cout << "输入鱼的种类";
	cin.get(ptrfish->type,20);//两种方法都可以

	cout << "通过指针输出金鱼种类 " << ptrfish->type << endl;
	cout << "通过指针输出金鱼重量 " << ptrfish->weight << endl;

	return 0;
}
```

16 cin.get()改为普通cin
如果地址中包含空格，普通cin读到空格就停止了，于是地址读取不全，cin.get()可以读取指定长度的内容，不因空格而停止。

17涉及vector对象，我还没看
第17题
```
#include<iostream>
#include<vector>

int main()
{
	const int num=10;//指定string的对象数为10个
	std::vector<string> str1[num];
	array<string,num> str2;
}
```
